---
openapi: 3.0.0
info:
  title: Simple  API recipes site.
  description: Web development environments project - Sharing and maintaining recipes.
  contact:
    email: alonu@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: "http://127.0.0.1:3000"
  description: SwaggerHub API Auto Mocking
tags:
- name: user account
  description: User main account functions
- name: user profile
  description: User main profile functions
- name: general site
  description: Site main functions
paths:
  /user/account/login:
    post:
      tags:
      - user account
      summary: User connect to site.
      description: The user enters his personal details to connect.
      operationId: userLogIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogIn'
        required: true
      responses:
        "201":
          description: Logged in successfully.
        "402":
          description: Logging in failed, invalid details or user is already logged in.
  /user/account/register:
    post:
      tags:
      - user account
      summary: Register User
      description: Create new user account.
      operationId: userRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      responses:
        "201":
          description: Registration success,The user has been created.
        "402":
          description: Registration failed, user already exist or invalid inputs.
  /user/account/logout:
    post:
      tags:
      - user account
      summary: The user log out from the system.
      description: Connection between the user and the server is close.
      operationId: userLogOut
      responses:
        "205":
          description: The Connection was closed, the user was not logged in at all. Refresh the page.
  /user/profile/addFavoriteRecipe:
    post:
      tags:
      - user profile
      summary: Add recipe as favorite for easy acesses later.
      description: Adds recipe to the user favorite list to be accessed from his profile.
      operationId: userFavoriteRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeId'
        required: true
      responses:
        "201":
          description: Successfully added to favorites.
        "402":
          description: Invalid recipe Id or already favorited.
  /user/profile/getFavouriteRecipe:
    get:
      tags:
      - user profile
      summary: Get access to the favorite recipes.
      description: Get all favorite recipies.
      responses:
        "201":
          description: Return user favorite recipies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArray'
        "206":
          description: User have no favorite recipes.
  /user/profile/addRecipe:
    post:
      tags:
      - user profile
      summary: Add new recipe to the user profile.
      description: Create and add a new recipe to the user recipies profile.
      operationId: AddRecipeToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeData'
        required: true
      responses:
        "201":
          description: Successfully added new recipe.
        "402":
          description: Invalid recipe details.
  /user/profile/getRecipes:
    get:
      tags:
      - user profile
      summary: Get the all recipes of the user
      description: Gets a list of all the user recipies.
      operationId: getRecipes
      responses:
        "201":
          description: Successfully got user's recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArray'
        "206":
          description: User have no recipes created.
  /recipes/{recipeID}:
    get:
      tags:
      - general site
      summary: Get spesific recipe information.
      description: Show all information on a specific user recipe.
      parameters:
      - name: recipeID
        in: path
        description: Recipe Id
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/RecipeId'
      responses:
        "201":
          description: Get information about specified recipe.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeData'
        "206":
          description: There is No such recipe id .
  /recipes/searchRecipe:
    get:
      tags:
      - general site
      summary: Search a specific Recipe
      description: Search a specific Recipe and wait to respond with returned items.Can serach the recipe by filter.
      parameters:
      - name: name
        in: query
        description: Search for desired recipe by dish name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: cuisine
        in: query
        description: Cuisine dropdown box
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Cusine'
      - name: diet
        in: query
        description: Diet dropdown box
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Diet'
      - name: intolerance
        in: query
        description: Intolerance dropdown box
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Intolerance'
      - name: number_of_results
        in: query
        description: Number of results to retrieve 5(default)/10/15
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "201":
          description: Successful search information about recipe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeData'
components:
  schemas:
    UserDetails:
      type: object
      properties:
        username:
          maxLength: 10
          minLength: 2
          uniqueItems: true
          type: string
          description: Length 2 to 10 letters.
          example: makaroshi
        firstname:
          type: string
          description: User first name.
          example: Gal
        lastname:
          type: string
          description: User last name.
          example: Alon
        country:
          type: string
          description: User's country.
          example: Israel
        password:
          maxLength: 10
          minLength: 2
          type: string
          description: Length 2 to 10 letters.
          format: password
          example: gal@123123
        email:
          type: string
          description: User's Email.
          example: gal.alon007@gmail.com
      description: Details the user attributes.
    UserLogIn:
      type: object
      properties:
        username:
          type: string
          description: User name.
          example: gari
        password:
          type: string
          description: User password.
          format: password
          example: gari
      description: Details the user log in attributes.
    RecipesArray:
      type: object
      properties:
        randomRecipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipeData'
      description: Recipesarray
    RecipeId:
      type: string
      description: Recipe id
      example: {"recipeId" : "13"}
    RecipeData:
      type: object
      properties:
        image:
          type: string
          description: The image of the recipe.
          format: URL
          example: URL
        name:
          type: string
          description: Recipe name.
          example: Brownies
        likes:
          type: integer
          description: How many likes the recipe have.
          example: 230
        vegetarian:
          type: boolean
          description: Is the recipe vegetarian?
          example: true
        vegan:
          type: boolean
          description: Is the recipe vegan?
          example: true
        glutenFree:
          type: boolean
          description: Is the recipe gluten Free?
          example: true
        userFavorite:
          type: boolean
          description: Did the user add this page to his favorite recipes?
          example: true
      description: Recipe object.
    Cusine:
      type: string
      enum:
      - Latin American
      - Mexican
      - Thai
      - Vietnamese
      - African
      - American
      - Chinese
      - Greek
      - Indian
      - Italian
      - Japanese
      - Jewish
      - Korean
    Diet:
      type: string
      enum:
      - Gluten Free
      - Vegetarian
      - Vegan
      - Pescetarian
      - Paleo
      - Primal
    Intolerance:
      type: string
      enum:
      - Dairy
      - Egg
      - Gluten
      - Peanut
      - Seafood
      - Sesame
      - Shellfish
      - Soy
